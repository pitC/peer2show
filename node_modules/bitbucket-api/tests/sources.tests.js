var should = require("should");
var bitbucket = require('../index');
var goodOptions = require('./helper').credentials;
var repoData = require('./helper').repository;

describe('Repository', function() {
  var repo;
  var repoData = {slug: 'app', owner: 'inline'};

  before(function (done) {
    var client = bitbucket.createClient(goodOptions);
    client.getRepository(repoData, function (err, repository) {
      if (err) {return done(err);}
      repo = repository;
      done();
    });
  });

  describe(".sources()", function () {

    describe(".info()", function () {
      it('should return info for a file', function (done) {
        repo.sources('/package.json').info(function (err, result) {
          result.path.should.eql('package.json');
          done(err);
        });
      });
      it('should return info for a folder', function (done) {
        repo.sources('/').info(function (err, result) {
          result.directories.length.should.be.above(1);
          done(err);
        });
      });
    });

    describe(".raw()", function () {
      it('should return data for a file', function (done) {
        repo.sources('/.gitignore').raw(function (err, result) {
          result.raw.should.include("node_modules");
          done(err);
        });
      });
      it('should return info for a folder', function (done) {
        repo.sources('/').raw(function (err, result) {
          result.lines.length.should.be.above(1);
          result.raw.should.include('app');
          done(err);
        });
      });
    });
  });
});
